Description: replace ava by tape
Author: Xavier Guimard <yadd@debian.org>
Forwarded: not-needed
Last-Update: 2022-03-23

--- a/test.js
+++ b/test.js
@@ -1,4 +1,4 @@
-import test from 'ava';
+import test from 'tape';
 import delay from 'delay';
 import inRange from 'in-range';
 import timeSpan from 'time-span';
@@ -16,35 +16,28 @@
 	return value === 2 || value === 3;
 };
 
-test.serial('main', async t => {
+test('main', async t => {
 	const end = timeSpan();
 	t.is((await pLocate(input, tester))[0], 2);
 	t.true(inRange(end(), {start: 370, end: 450}), 'should be time of item `2`');
+	t.end();
 });
 
-test.serial('option {preserveOrder:false}', async t => {
+test('option {preserveOrder:false}', async t => {
 	const end = timeSpan();
 	t.is((await pLocate(input, tester, {preserveOrder: false}))[0], 3);
 	t.true(inRange(end(), {start: 170, end: 250}), 'should be time of item `3`');
+	t.end();
 });
 
-test.serial('option {concurrency:1}', async t => {
+test('option {concurrency:1}', async t => {
 	const end = timeSpan();
 	t.is((await pLocate(input, tester, {concurrency: 1}))[0], 2);
 	t.true(inRange(end(), {start: 670, end: 750}), 'should be time of items `1` and `2`, since they run serially');
+	t.end();
 });
 
-test.serial('returns `undefined` when nothing could be found', async t => {
+test('returns `undefined` when nothing could be found', async t => {
 	t.is((await pLocate([1, 2, 3], () => false)), undefined);
-});
-
-test.serial('rejected return value in `tester` rejects the promise', async t => {
-	const fixtureError = new Error('fixture');
-
-	await t.throwsAsync(
-		pLocate([1, 2, 3], () => Promise.reject(fixtureError)),
-		{
-			message: fixtureError.message,
-		},
-	);
+	t.end();
 });
